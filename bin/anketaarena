#!/bin/bash

set -e
installdir="$(dirname "$(readlink -f "$0")")"

default () { [ "${!1}" == "" ] && export "$1=$2"; true; }

if [ "$aa_config" ]; then
  source "$aa_config"
elif [ -f "$installdir/../etc/anketaarena.cfg" ]; then
  source "$installdir/../etc/anketaarena.cfg"
elif [ -f /etc/anketaarena.cfg ]; then
  source /etc/anketaarena.cfg
else
  echo "cannot find anketaarena config file"
  exit 1
fi


hrule () {
  echo $'\e[1m'
  cols=$(tput cols)
  yes = | tr -dc = | head -c${cols:-80}
  echo
  echo "$*"
  echo $'\e[0m'
}

confset () {
  # until the first occurence of "A:" (inclusive),
  # replace every "A: blah" with "A: B"
  # (meaning, only the first occurence of A: is replaced)
  sed -r "1,/^ *$1:/ s!(^ *$1: *).*!\\1$2!"
}

trypv () {
  if pv --version &>/dev/null; then
    pv "$1"
  else
    cat "$1"
  fi
}

check_arena_name () {
  if [[ "$1" == *[^A-Za-z0-9]* ]]; then
    echo >&2 "error: invalid character in arena name"
    exit 1
  fi
  if ! [ "$1" ]; then
    echo >&2 "error: no arena name specified"
    exit 1
  fi
}

create () {
  if ! [ -w "$arena_docroot" ]; then
      echo >&2 "Error: You don't have permission to write to '$arena_docroot'."
      exit 1
  fi
  
  # TODO checkni ci je mysql odsprostene

  check_arena_name "$1"
  if [ -e "$arena_docroot/$1" ]; then
    echo >&2 "error: arena already exists"
    exit 1
  fi

  default db_name aa_$1
  default branch_name "$2"

  dir=`mktemp -d`
  cd "$dir"
  echo "using temporary directory: $dir"

  # 0. get passwords
  user_email=$(git config --get user.email; true)
  [ -z "$user_email" ] && read -rp "Your e-mail: " user_email

  # download db dump first (so that the rest does not require interaction)
  scp "$sql_file" "$dir"

  # 1. clone
  hrule "(1/5) git clone"
  clone_opts=()
  [ -n "$branch_name" ] && clone_opts=(-b "$branch_name")
  git clone "${clone_opts[@]}" "$clone_url" "$1"
  cd "$1"

  # 2. initialize
  hrule "(2/5) init_all"
  ./scripts/init_all.sh "$www_user"
  hrule "(3/5) composer"
  curl -s https://getcomposer.org/installer | php
  ./composer.phar install

  # 3. configure
  cp app/config/config_local.yml $dir/
  cat $dir/config_local.yml |
    sed -r '/^\s*database:/,/^\s*$/ d' |         # remove the first database:
    sed -r '/^#\s*database:/,/^\s*$/ s/^#//' |   # uncomment the second database:
    confset dbname $db_name |
    confset user $db_user |
    confset password $db_password |
    confset allow_db_reset false |
    confset mail_dest_new_teaching_association "$user_email" |
    sed -r '/swiftmailer/,$ { s/(password: *)~/\1'"$email_password"'/ }' |
    sed -r '/orgUnits/ s/ldap_user_source/demo_user_source/' |
    cat > app/config/config_local.yml

  # 4. make db
  hrule "(4/5) create database $db_name"
  sql_basename=${sql_file##*/}
  unxz "$dir/$sql_basename"
  arenamysql <<<"CREATE DATABASE IF NOT EXISTS $db_name;"
  echo "importing $sql_basename..."
  trypv "$dir/${sql_basename%.xz}" | arenamysql "$db_name"

  # 5. install
  hrule "(5/5) move arena directory"
  cd "$dir"
  mv "$1" "$arena_docroot"

  # 6. done
  echo "arena successfully created in: $arena_docroot$1"
  echo
  if [ -z "$(git config --get user.name)" ]; then
    echo 'btw odporucam: git config --global user.name "User name"'
  fi
  if [ -z "$(git config --get user.email)" ]; then
    echo 'btw odporucam: git config --global user.email user@example.com'
  fi
}


drop () {
  check_arena_name "$1"
  default db_name aa_$1

  echo "To permanently delete this arena, execute the following commands:"
  echo ""
  [ -e "$arena_docroot$1" ] && echo "rm -rf $arena_docroot$1"
  echo "$0 mysql <<<'DROP DATABASE IF EXISTS $db_name;'"
  echo ""
}

arenamysql () {
  mysql -u "$db_user" -p"$db_password" "$@"
}

list () {
  if [ "$1" == "--all" ]; then
    user=""
  elif [ "$1" ]; then
    user="($1)"
  else
    user="($(whoami))"
  fi
  cd "$arena_docroot"
  GLOBIGNORE=*.php
  stat -c '%n (%U)' * | grep -F "$user"
}

if [ "$1" == "create" ]; then
  create "$2" "$3"
elif [ "$1" == "drop" ] && [ "$2" == "--dry-run" ]; then
  drop "$3"
elif [ "$1" == "mysql" ]; then
  shift
  arenamysql "$@"
elif [ "$1" == "list" ]; then
  list "$2"
else
  echo "usage:"
  echo "  $0 create <name> [<branch>]"
  echo "  $0 list [user]"
  echo "  $0 list --all"
  echo "  $0 drop --dry-run <name>"
  echo "  $0 mysql [<dbname>] [<other-mysql-options>]"
  exit 1
fi

